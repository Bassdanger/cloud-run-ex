# Global env for steps
steps:
  # Terraform apply for deploy
  - id: 'terraform init'
    name: 'hashicorp/terraform:1.12.0'
    dir: terraform/deploy
    script: terraform init
  - id: 'terraform plan'
    name: 'hashicorp/terraform:1.12.0'
    dir: terraform/deploy
    script: terraform plan -out=tfplan
  - id: 'terraform apply'
    name: 'hashicorp/terraform:1.12.0'
    dir: terraform/deploy
    script: terraform apply tfplan
  # List revisions
  - id: 'list revisions'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - run
      - revisions
      - list
      - --region=$_REGION

  # script for traffic splits
  - id: 'traffic split'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -c
      - |
        #!/bin/bash
        SERVICE_NAME=$(gcloud run services list --platform=managed --region=$_REGION --format="value(NAME)")
        echo "Service Name: $SERVICE_NAME"
        # Get the latest two revisions
        REVISIONS=($(gcloud run revisions list --service=$SERVICE_NAME --platform=managed --region=$_REGION --sort-by=~CREATED --limit=2 --format="value(NAME)"))
        if [ ${#REVISIONS[@]} -lt 2 ]; then
          echo "Not enough revisions to perform traffic split."
          exit 1
        fi
        echo "Latest Revisions: ${REVISIONS[0]}, ${REVISIONS[1]}"
        # Split traffic 50/50 between the two latest revisions
        gcloud run services update-traffic $SERVICE_NAME \
          --to-revisions=${REVISIONS[0]}=50,${REVISIONS[1]}=50 \
          --platform=managed \
          --region=$_REGION

options:
  logging: CLOUD_LOGGING_ONLY
  env:
    - 'TF_VAR_project_id=$PROJECT_ID'
    - 'TF_VAR_region=$_REGION'

